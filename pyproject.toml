[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "python-gitignore"
version = "1.0.0"
description = "A CLI tool to combine .gitignore templates from github/gitignore"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Joshua Grant", email = "joshua@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Utilities",
]
requires-python = ">=3.10"
dependencies = [
    "typer>=0.9.0",
    "requests>=2.31.0",
    "platformdirs>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "responses>=0.23.0",
    "ruff>=0.1.0",
]
build = [
    "pyinstaller>=6.0.0",
    "cx-freeze>=6.15.0",
]

[project.scripts]
gi = "gi.__main__:main"

[project.urls]
Homepage = "https://github.com/joshuagrant/gi"
Repository = "https://github.com/joshuagrant/gi"
Issues = "https://github.com/joshuagrant/gi/issues"

[tool.hatch.build.targets.wheel]
packages = ["gi"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = [
    "S101", "S104", "S108", "S110", "S112", "S311", "S603", "S607",  # Security
    "C901", "PLR0912", "PLR0913", "PLR0915",  # Complexity (CLI functions are complex by nature)
    "FBT001", "FBT003",  # Boolean arguments (Typer CLI patterns)
    "B008",  # Function calls in defaults (Typer pattern)
    "BLE001",  # Blind exceptions (acceptable for CLI error handling)
    "PERF203",  # Try-except in loops (acceptable for template fetching)
    "PLW0603",  # Global statement (testing pattern)
    "PLR2004",  # Magic values (acceptable for version parsing)
    "PLC0415",  # Import at top level (acceptable for conditional imports)
    "SIM105",  # Contextlib suppress (prefer explicit try-except for clarity)
    "TRY003", "EM101", "EM102",  # Exception messages (acceptable for scripts)
    "T201",  # Print statements (acceptable for CLI scripts)
    "ARG001",  # Unused arguments (acceptable for interface compatibility)
    "E501",  # Line too long (acceptable for long strings and comments)
    "W291", "W293",  # Whitespace (will be fixed by formatter)
    "COM812",  # Trailing comma (will be fixed by formatter)
    "PERF401",  # List comprehension (acceptable for template processing)
    "TRY300",  # Try-except structure (acceptable for error handling)
]
