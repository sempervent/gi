name: Build Cross-Platform Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[build]"

    - name: Build executable
      run: |
        python scripts/build.py

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: gi-${{ matrix.os }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create release archive
      run: |
        mkdir -p release
        for os in ubuntu-latest windows-latest macos-latest; do
          if [ -d "gi-$os" ]; then
            cp -r "gi-$os"/* release/
          fi
        done
        
        # Create archives for each platform
        cd release
        tar -czf gi-linux-x86_64.tar.gz *
        zip -r gi-windows-x86_64.zip *
        tar -czf gi-macos-x86_64.tar.gz *
        
        # Move back to root
        mv *.tar.gz *.zip ../
        cd ..

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          gi-linux-x86_64.tar.gz
          gi-windows-x86_64.zip
          gi-macos-x86_64.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
